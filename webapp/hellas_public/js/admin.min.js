!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.admin=n():e.admin=n()}(this,(function(){return function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=5)}([function(e,n,t){"use strict";t.d(n,"b",(function(){return o})),t.d(n,"c",(function(){return i})),t.d(n,"a",(function(){return s})),t.d(n,"j",(function(){return l})),t.d(n,"e",(function(){return c})),t.d(n,"d",(function(){return u})),t.d(n,"g",(function(){return d})),t.d(n,"h",(function(){return f})),t.d(n,"f",(function(){return b})),t.d(n,"i",(function(){return p}));let o={},r={},i={lumberyard:{disabled:!0,cat:"eco",type:"booster",cat_color:"green",cat_bg:"bg-success"},stonemason:{disabled:!1,cat:"eco",type:"booster",cat_color:"green",cat_bg:"bg-success"},foundry:{disabled:!0,cat:"eco",type:"booster",cat_color:"green",cat_bg:"bg-success"},mill:{disabled:!0,cat:"eco",type:"booster",cat_color:"green",cat_bg:"bg-success"},warehouse:{disabled:!1,cat:"eco",type:"storage",cat_color:"green",cat_bg:"bg-success"},granary:{disabled:!1,cat:"eco",type:"storage",cat_color:"green",cat_bg:"bg-success"},harbor:{disabled:!0,cat:"eco",type:"trading",cat_color:"green",cat_bg:"bg-success"},acropolis:{disabled:!1,cat:"infra",type:null,cat_color:"blue",cat_bg:"bg-primary"},agora:{disabled:!1,cat:"infra",type:null,cat_color:"blue",cat_bg:"bg-primary"},theatre:{disabled:!1,cat:"infra",type:null,cat_color:"blue",cat_bg:"bg-primary"},temple:{disabled:!0,cat:"infra",type:null,cat_color:"blue",cat_bg:"bg-primary"},house:{disabled:!0,cat:"infra",type:null,cat_color:"blue",cat_bg:"bg-primary"},road:{disabled:!1,cat:"infra",type:null,cat_color:"blue",cat_bg:"bg-primary"},gymnasium:{disabled:!1,cat:"mil",type:"training",cat_color:"red",cat_bg:"bg-danger"},wall:{disabled:!0,cat:"mil",type:"defensive",cat_color:"red",cat_bg:"bg-danger"}};const s={lumberyard:"wood",stonemason:"limestone",foundry:"bronze",mill:"food"},l={wood:{name:"Forest",bg:"bg-success"},limestone:{name:"Limestone mine",bg:"bg-secondary"},marble:{name:"Marble mine",bg:"bg-white progress-bar-striped"},food:{name:"Wheat fields",bg:"bg-danger"},bronze:{name:"Copper mine",bg:"bg-copper bg-copper progress-bar-striped"},gold:{name:"Taxation",bg:"bg-warning"}};fetch("/json/buildings.json",{cache:"force-cache"}).then(e=>e.json()).then(e=>{o=e.costs,r=e.build_tree,Events.fire("load_game_conf",[])});const a=new Set(["wood","gold","limestone","marble"]);function c(e,n){const t={},r=n;if(!o[e])return console.error("Bid not found",e),{};for(let n of a){if(!o[e][n])continue;const i=o[e][n][r-1];i>0&&(t[n]=i)}return 0==len(t)?null:t}function u(e,n,t){if("number"==typeof n||!isNaN(parseInt(n))){let r=parseInt(n);n=e.gatherers[r][0];if(!t)t=e.gatherers[r][1];return function(e,n,t){const r=t+1;if(!o[n].wood[r-1])return!1;for(let t of a){const i=o[n][t][r-1];if(e.resources[t]<i)return!1}return!0}(e,n,t)}if(i[n].disabled)return!1;const r=t||(e.buildings[n]||0)+1;if(!o[n].wood[r-1])return!1;for(let t of a){const i=o[n][t][r-1];if(e.resources[t]<i)return!1}return!0}function d(e){let n=[];for(let[t,o]of Object.items(r)){if(e.buildings[t])continue;if("road"==t)continue;if(i[t].disabled)continue;let r=!0;for(let[n,t]of o)(e.buildings[n]||0)<t&&(r=!1);r&&n.push(t)}return n}function f(e){let n=[];for(let[t,o]of Object.items(r)){if(e.buildings[t])continue;if("road"==t)continue;if(i[t].disabled)continue;let r=[t,[]],s=0;for(let[n,t]of o)s+=Math.max(0,t-(e.buildings[n]||0)),r[1].push([n,t]);s/len(r[1])<=2.4&&0!=s&&n.push(r)}return n}function b(e){let n=[];for(let[e,t]of Object.items(r))"road"!=e&&(i[e].disabled||n.push(e));return n}function p(e,n){let t;t=isNaN(parseInt(n))?c(n,e.buildings[n]):c(e.gatherers[n][0],e.gatherers[n][1]);for(let[n,o]of Object.items(t))e.resources[n]-=o}},function(e,n,t){"use strict";t.d(n,"d",(function(){return u})),t.d(n,"c",(function(){return d})),t.d(n,"b",(function(){return f})),t.d(n,"e",(function(){return b})),t.d(n,"a",(function(){return p}));var o=t(0);const r={wood:"lumberyard",limestone:"stonemason",bronze:"foundry",food:"mill",gold:"agora",marble:"__nothing__"},i=1,s=11e3,l=1e5,a=30,c=.9;function u(e,n){if("gold"==n)return d(e,n,1);let t=0;for(let[o,r]of e.gatherers)o==n&&(t+=d(e,o,r));return t}function d(e,n,t){if(t<=0)return 0;let s=1,l=r[n]||null;if(l in e.buildings){let n=e.buildings[l];n>0&&(s=1+o.b[l].attri[n-1]/100)}return"gold"==n?s*e.resources.pop*c*i:o.b[n].prod[t-1]*s*i}function f(e,n){if("holy"==n)return a;if("emerald"==n)return l;if("pop"==n)return s;let t="warehouse";"food"==n&&(t="granary");let r=e.buildings[t]||0;return 0==r?0:o.b[t].attri[r-1]}function b(e,n){const t=n/3600;return e.resources.wood+=Math.min(f(e,"wood"),u(e,"wood")*t),e.resources.food+=Math.min(f(e,"food"),u(e,"food")*t),e.resources.gold+=Math.min(f(e,"gold"),u(e,"gold")*t),e.resources.marble+=Math.min(f(e,"marble"),u(e,"marble")*t),e.resources.bronze+=Math.min(f(e,"bronze"),u(e,"bronze")*t),e.resources.limestone+=Math.min(f(e,"limestone"),u(e,"limestone")*t),!0}function p(e){return e>=1e6?5:e>=1e5?4:e>=5e3?3:e>=200?2:1}},function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));let o={},r={};$("#app-gui").innerHTML&&(o=new Vue({el:"#app-gui",data:{opened_comp:null,opened:null,opened_type:null,infobar_lastpos:defaultdict(list,!0)},methods:{child:function(e){return this.$refs[e]},infobar:function(e,...n){this.opened_comp&&"infobar"!=this.opened_type&&(this.opened_comp.show=!1,this.opened=null,this.opened_type=null);let t=this.$refs["infobar-"+e];if(t){if(t.open(...n),t.show=!0,this.opened_comp=t,this.opened=e,this.opened_type="infobar",o.infobar_lastpos[o.opened]){const[e,n]=o.infobar_lastpos[o.opened];Vue.nextTick(()=>{t.$el.style.left=e+"px",t.$el.style.top=n+"px"})}return t}},dialog:function(e,...n){this.opened_comp&&"infobar"!=this.opened_type&&(this.opened_comp.show=!1,this.opened=null,this.opened_type=null);let t=this.$refs["dialog-"+e];if(t)return t.open(...n),t.show=!0,this.opened_comp=t,this.opened=e,this.opened_type="dialog",t},overlay:function(e,n,...t){this.opened_comp&&"infobar"!=this.opened_type&&(r[this.opened]&&r[this.opened].setPosition(void 0),this.opened_comp.show=!1,this.opened=null,this.opened_type=null);let i=this.$refs["overlay-"+e];if(i){if(i.open(...t),i.show=!0,this.opened_comp=i,this.opened=e,this.opened_type="overlay",r[e])r[e].setPosition(n);else{const t=new ol.Overlay({element:o.$refs["overlay-"+e].$el,position:n,autoPan:!0,autoPanAnimation:{duration:250}});map.addOverlay(t),r[e]=t}return i}},flash:function(e,n,t){this.$refs.flash.display(e,n,t)},quit:function(e){if(e){const n=this.$refs[e];if(!n)return void console.error("Trying to close unknown gui element",e);n.close?n.close():n.show=!1}else for(let e in this.$refs)this.quit(e);(this.opened_comp||this.opened)&&(this.opened_comp=null,this.opened=null)}},computed:{frame:function(){return this.$refs.frame}}}))},function(e,n,t){"use strict";const o={not_found:new Color(0,255,255),black:new Color(0,0,0),white:new Color(255,255,255),mil_mark:new Color(150,150,150),exhausted:new Color(40,58,64),base:new Color([211,191,158]),base_edge:new Color([99,84,58])},r={AA:o.base},i=new Set([]);let s={colorscheme:"softlight"};function l(e){if("string"==typeof e)e={iso:e};else if(e.getProperties)e=e.getProperties();let n=e.iso;return n?r[n]?i.has(n)&&["softlight","hardlight"].includes(s.colorscheme)?r[n].blend(o.base,"multiply"):"inverted"==s.colorscheme?r[n].blend(o.base,"multiply"):r[n]:o.not_found:o.base}const a=new Set([]),c={w:512,h:512};let u=document.createElement("canvas");u.width=c.w,u.height=c.h;u.getContext("2d");let d=[0,0],f=!1;Vue.mixin({methods:{open_dialog:function(e,...n){gui.dialog(e,...n)},open_infobar:function(e,...n){gui.infobar(e,...n)},close_infobar:function(e){gui.$refs["infobar-"+e]&&gui.$refs["infobar-"+e].onclose&&gui.$refs["infobar-"+e].onclose(),gui.quit("infobar-"+e)},infobar_mousedown:function(e){const n=e.target.parentElement;"infobar "==n.className.substr(0,8)&&(f=!0,d=[n.offsetLeft-e.clientX,n.offsetTop-e.clientY])},infobar_mouseup:function(e){f=!1},infobar_mousemove:function(e,n){if(e.preventDefault(),f){const t=e.target.parentElement,o=e.clientX+d[0],r=e.clientY+d[1];t.style.left=o+"px",t.style.top=r+"px",gui.infobar_lastpos[n]=[o,r]}},maxHeight:function(){return"max-height: "+($("#app-map").offsetHeight-220)+"px;"},area_color:function(e){return"color: "+l(e).contrast()+";"},area_background:function(e){var n=l(e);return"background: "+n.rgba()+";"+("color: "+n.contrast()+";")},unit_background:function(e){let n=l(e);for(;"black"==n.contrast();)n=n.shade(-.15);return"background: "+n.rgba()+";"+("color: "+n.contrast()+";")},herald:function(e){let n;if(n="string"==typeof e?e:e.get||e.getProperties?e.get("iso"):e.iso,a.has(n))var t="background-image: "+("url('/img/flags/flag_"+n+".png')")+";background-position:center;";else t="background-color: "+l(e).rgb()+";";return t}}})},,function(e,n,t){"use strict";t.r(n);var o=t(0),r=t(1);const i={wood:"success",limestone:"secondary",marble:"white progress-bar-striped",food:"danger",bronze:"copper progress-bar-striped",gold:"warning",pop:"dark",emerald:"success progress-bar-striped",holy:"info progress-bar-striped"};Vue.component("town-edit",{template:'\n  <div v-if="town">\n    <h2 class="font-brand text-white">Editing {{ town.name }} \n      <button @click="save" class="btn btn-primary">Save</button> \n      <button @click="clear" class="btn btn-link">Clear</button> \n    </h2>\n\n    <div class="d-flex">\n      <div class="p-2 card-paper">\n        <div class="row">\n          <div class="col">\n            <strong>Resources</strong>\n          </div>\n          <div class="col">\n            <strong>Gatherers</strong>\n          </div>\n        </div>\n\n        \x3c!-- Resources --\x3e\n        <div v-for="res in resources">\n          <div class="row">\n            <div class="col card-paper">\n\n              <p><span :class="\'ra ra-res-\'+res"></span> <strong :class="\'text-\'+rescol(res)">{{ res.title() }}</strong> - {{ town.resources[res] }}</p>\n\n              <input type="range" :class="\'custom-range bg-\'+rescol(res)" min="0" :max="storage(res)" v-model.number="town.resources[res]">\n\n              <div>\n                <button @click="town.resources[res] = 0" class="btn btn-link">(set 0)</button>\n                <button @click="town.resources[res] = storage(res)"class="btn btn-link">(set {{ storage(res) }})</button>\n              </div>\n\n            </div>\n            <div class="col card-paper">\n\n              <div v-for="[res,lvl],i in gatherers(res)">\n                <div class="d-flex">\n                  <input type="range" :class="\'flex-fill custom-range bg-\'+rescol(res)" min="0" max="20" v-model.number="town.gatherers[i][1]">\n                  <div style="min-width: 50px; padding-left: 3px">Lv {{ town.gatherers[i][1] }}</div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <hr />\n        </div>\n      </div>\n      <div v-for="Q in [buildings2, buildings]" class="p-2 card-paper">\n        \x3c!-- Buildings --\x3e\n        <table class="table table-sm table-borderless">\n          <tr>\n            <th>Build</th>\n            <th colspan="2">Level</th>\n            <th>Coords</th>\n          </tr>\n          <tr v-for="bid in Q">\n            <td :class="{\'text-secondary\': !town.buildings[bid] == 0}">\n              <strike v-if="!town.buildings[bid]">{{ bid.title() }}</strike>\n              <span v-else>{{ bid.title() }}</span>\n            </td>\n            <td>\n              <input type="range" class="flex-fill custom-range" min="0" :max="max_lvl(bid)" v-model.number="town.buildings[bid]">\n            </td>\n            <td>\n              <strike v-if="!town.buildings[bid]">Lvl 0</strike>\n              <span v-else>Lvl {{ town.buildings[bid] }}</span>\n\n            <td>\n              <span v-if="town.placements[bid]">\n                <input type="number" v-model.number="town.placements[bid][0]" min="-28" max="28" style="max-width: 50px">\n                <input type="number" v-model.number="town.placements[bid][1]" min="-28" max="28" style="max-width: 50px">\n                \n              </span>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n',data:function(){return{town:null}},methods:{open:function(e){this.town=e},rescol:function(e){return i[e]},storage:function(e){return Object(r.b)(this.town,e)},gatherers:function(e){let n={};for(let[t,o]of enumerate(this.town.gatherers))o[0]==e&&(n[t]=o);return n},max_lvl:function(e){return o.b[e]?len(o.b[e].wood):0},save:function(){const e=new FormData;e.append("wid",this.town.wid),e.append("iso",this.town.iso),e.append("resources",JSON.stringify(this.town.resources)),e.append("gatherers",JSON.stringify(this.town.gatherers)),e.append("placements",JSON.stringify(this.town.placements)),e.append("buildings",JSON.stringify(this.town.buildings)),fetch("/town/edit",{method:"POST",body:e})},clear:function(){this.town.buildings={road:1},this.town.placements={road:[]};for(let e in this.town.resources)this.town.resources[e]=0;for(let e of this.town.gatherers)e[1]=0;this.town.buildings.acropolis=1,this.town.buildings.warehouse=1,this.town.buildings.granary=1}},watch:{town:{handler:function(e){let n=new Set([]),t=[];for(let e in this.town.buildings)0!=this.town.buildings[e]?this.town.placements[e]?n.add(this.town.placements[e].join(",")):t.push(e):(delete this.town.buildings[e],delete this.town.placements[e]);let o=list(range(14));random.shuffle(o);let r=list(range(14));random.shuffle(r);for(let e of t){for(let t of o)for(let o of r)if(!n[t+","+o]){this.town.placements[e]=[t,o];break}this.town.placements[e]||(this.town.placements[e]=[0,0])}},deep:!0}},computed:{resources:function(){return Object.keys(i)},resources2:function(){return["pop","holy"]},buildings2:function(){return["lumberyard","stonemason","foundry","mill","warehouse","granary","house"]},buildings:function(){let e=this.buildings2;const n=["wood","limestone","marble","bronze","food","road"];return Object.keys(o.b).filter((function(t){return!e.includes(t)&&!n.includes(t)}))}}});t(3);const s=t(2).a;function l(e,n,t,o){window.gui=s,Events.past("load_game_conf",()=>{!function(e,n,t){"town"==e&&s.$refs["town-edit"].open(n),"world"==e&&s.$refs["world-edit"].open(n)}("town",o)})}t.d(n,"edit_town",(function(){return l}))}]).default}));